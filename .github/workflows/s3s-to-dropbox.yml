name: Splatoon3 Send DropBox

on:
  schedule:
    - cron: '0 0-23/3 * * *'
  workflow_dispatch:
  
permissions:
  contents: write
  
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      API_KEY: ${{ secrets.API_KEY }}
      ACC_LOC: ${{ secrets.ACC_LOC }}
      GTOKEN: ${{ secrets.GTOKEN }}
      BULLETTOKEN: ${{ secrets.BULLETTOKEN }}
      SESSION_TOKEN: ${{ secrets.SESSION_TOKEN }}
      F_GEN: ${{ secrets.F_GEN }}
      D_API_KEY: ${{ secrets.D_API_KEY }}
      D_APP_SECRET: ${{ secrets.D_APP_SECRET }}
      REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
      
    name: Splatoon3 Send DropBox
    steps:
      - uses: actions/checkout@v3
      - name: Get DropBox Token
        run: |
          DTOKEN=$(curl -s https://api.dropbox.com/oauth2/token \
          -d grant_type=refresh_token \
          -d refresh_token="${{ env.REFRESH_TOKEN }}" \
          -u ${{ env.D_API_KEY }}:${{ env.D_APP_SECRET }} | jq -r ".access_token")
          echo "::add-mask::$DTOKEN"
          echo "DTOKEN=$DTOKEN" >> $GITHUB_ENV

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Checkout frozenpandaman/s3s
        uses: actions/checkout@v3
        with:
          repository: 'frozenpandaman/s3s'
          path: s3s

      - name: Generate config.txt
        working-directory: s3s
        run: |
          echo '{"api_key": "${{ env.API_KEY }}", "acc_loc": "${{ env.ACC_LOC }}", "gtoken": "${{ env.GTOKEN }}", "bullettoken": "${{ env.BULLETTOKEN }}", "session_token": "${{ env.SESSION_TOKEN }}", "f_gen": "${{ env.F_GEN }}" }' > config.txt
          cat config.txt
      - name: Install s3s requirements
        working-directory: s3s
        run: |
          pip install -r requirements.txt
      - name: Run s3s
        working-directory: s3s
        run: |
          python3 s3s.py -o

      - name: Masking results FileName
        run: |
          for i in $(ls -1 s3s/exports/coop_results)
          do
            echo "::add-mask::$i"
          done
#          for i in $(ls -1 s3s/exports/results)
#          do
#            echo "::add-mask::$i"
#          done

      - name: CreateFolder and Move battle_results
        run: |
          mkdir s3s/exports/results/vs_bankara
          mkdir s3s/exports/results/vs_event
          mkdir s3s/exports/results/vs_private
          mkdir s3s/exports/results/vs_xmatch
          mkdir s3s/exports/results/vs_regular

          
          for i in $(ls -1 s3s/exports/results)
          do
            cat $i | jq -r ".data.vsHistoryDetail.vsMode.mode"
            if [ $(cat $i | jq -r ".data.vsHistoryDetail.vsMode.mode") = "BANKARA" ] ; then
              mv s3s/exports/results/$i s3s/exports/results/vs_bankara
            elif [ cat $i | jq -r ".data.vsHistoryDetail.vsMode.mode" = "LEAGUE" ] ; then
              mv s3s/exports/results/$i s3s/exports/results/vs_event
            elif [ cat $i | jq -r ".data.vsHistoryDetail.vsMode.mode" = "PRIVATE" ] ; then
              mv s3s/exports/results/$i s3s/exports/results/vs_private
            elif [ cat $i | jq -r ".data.vsHistoryDetail.vsMode.mode" = "XMATCH" ] ; then
              mv s3s/exports/results/$i s3s/exports/results/vs_xmatch
            else
              mv s3s/exports/results/$i s3s/exports/results/vs_regular
            fi
          done
          ls s3s/exports/results/vs_bankara
          ls s3s/exports/results/vs_private
          
      - name: battle_results Send to DropBox
        run: |
          for f in vs_bankara vs_event vs_private vs_xmatch vs_regular
          do
            cnt="0"
            for i in $(ls -1 s3s/exports/results/$f)
            do
              if [ ${cnt} = "0" ] ; then
                cnt="1"
              else
                curl -X POST https://content.dropboxapi.com/2/files/upload \
                  --header "Authorization: Bearer ${{ env.DTOKEN }}" \
                  --header "Dropbox-API-Arg: {\"path\":\"/Splatoon3/test2/$i\",\"mode\":\"overwrite\"}" \
                  --header  "Content-Type: application/octet-stream" \
                  --data-binary @s3s/exports/results/$f/$i
              fi
            done
          done
          
      - name: coop_results Send to DropBox
        run: |
          cnt="0"
          for i in $(ls -1 s3s/exports/coop_results)
          do
            if [ ${cnt} = "0" ] ; then
              cnt="1"
            else
              curl -X POST https://content.dropboxapi.com/2/files/upload \
                --header "Authorization: Bearer ${{ env.DTOKEN }}" \
                --header "Dropbox-API-Arg: {\"path\":\"/Splatoon3/coop_results/$i\",\"mode\":\"overwrite\"}" \
                --header  "Content-Type: application/octet-stream" \
                --data-binary @s3s/exports/coop_results/$i
            fi
          done
